/*
 * FilterTool.java
 *
 * Created on 09-May-2011, 13:17:33
 */

package uk.ac.uea.cmp.srnaworkbench.tools.mirprof;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.commons.lang3.StringUtils;
import uk.ac.uea.cmp.srnaworkbench.history.HistoryFileType;
import uk.ac.uea.cmp.srnaworkbench.utils.FileDialogUtils;
import uk.ac.uea.cmp.srnaworkbench.utils.FileDialogUtils.FileExtFilter;

/**
 *
 * @author w0445959
 */
final class MirprofInputPanel extends javax.swing.JPanel
{
  public MirprofInputPanel()
  {
    // Init GUI components
    initComponents();
    
    
    fspInput.setFilters( new FileNameExtensionFilter[]{FileExtFilter.FASTA.getFilter()});
    fspGenome.setFilters( new FileNameExtensionFilter[]{FileExtFilter.FASTA.getFilter()});
    int widths[] = {fspInput.getLabelWidth(),
    fspGenome.getLabelWidth(),
    };

    int maxWidth = Integer.MIN_VALUE;
    for(int currentWidth : widths)
    {
      if(currentWidth > maxWidth)
        maxWidth = currentWidth;
    }
    fspInput.setLabelWidth( maxWidth );
    fspGenome.setLabelWidth( maxWidth );
 
    fspInput.setFileLineAmount( 16);

  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fspGenome = new uk.ac.uea.cmp.srnaworkbench.swing.FileSelectorPanel();
        fspInput = new uk.ac.uea.cmp.srnaworkbench.swing.FileSelectorPanel();

        setBackground(new java.awt.Color(120, 120, 120));
        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "miRProf Input Options", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans Unicode", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        setForeground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(550, 170));
        setRequestFocusEnabled(false);

        fspGenome.setToolTipText("<html>\nThe genome file associated with the sRNA datasets provided. <br/>\nMandatory if more than one sRNA datasets are provided.\n</html>");
        fspGenome.setFilters(FileExtFilter.toFilterArray(FileExtFilter.FASTA));
        fspGenome.setFocusTraversalPolicyProvider(true);
        fspGenome.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11)); // NOI18N
        fspGenome.setHistoryType(uk.ac.uea.cmp.srnaworkbench.history.HistoryFileType.GENOME);
        fspGenome.setLabel("Genome File Path:      ");
        fspGenome.setLabelWidth(125);
        fspGenome.setSelector(uk.ac.uea.cmp.srnaworkbench.swing.FileSelector.LOAD);
        fspGenome.setToolName("MiRProf");

        fspInput.setHistoryType(uk.ac.uea.cmp.srnaworkbench.history.HistoryFileType.SRNA);
        fspInput.setLabel("Input Files: ");
        fspInput.setSelector(uk.ac.uea.cmp.srnaworkbench.swing.FileSelector.MULTI_LOAD);
        fspInput.setToolName("MiRProf");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fspInput, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
                    .addComponent(fspGenome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(fspInput, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fspGenome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("Mirprof Options");
        getAccessibleContext().setAccessibleParent(this);
    }// </editor-fold>//GEN-END:initComponents

 

  @Override
  public void setEnabled( boolean enabled )
  {
    super.setEnabled( enabled );

    fspInput.setEnabled( enabled );
    fspGenome.setEnabled( enabled );
  }
  
  public void reset()
  {
    this.fspInput.clear();
    this.fspGenome.clear();
  }

  /**
   * Gets a list of File objects representing the paths described in the input files text box
   * @return A list of File objects representing the paths described in the input files text box
   */
  public List<File> getInputFiles()
  {
//    ArrayList<File> samples = new ArrayList<File>();
//    String[] lines = this.txtInputFiles.getText().split( "\n" );
//
//    for ( String line : lines )
//    {
//      String in_path = line.trim();
//
//      if ( in_path.length() > 0 )
//      {
//        samples.add( new File( in_path ) );
//      }
//    }

    //return samples;
    return this.fspInput.getFiles();
  }

  /**
   * Gets a File object representation of the path described in the genome file text box
   * @return File object representation of the path described in the genome file text box
   */
  public File getGenome()
  {
    return fspGenome.getFile();
  }
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private uk.ac.uea.cmp.srnaworkbench.swing.FileSelectorPanel fspGenome;
    private uk.ac.uea.cmp.srnaworkbench.swing.FileSelectorPanel fspInput;
    // End of variables declaration//GEN-END:variables
}
