/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uk.ac.uea.cmp.srnaworkbench.tools.qualitycheck.FX;

import java.beans.PropertyVetoException;
import java.io.IOException;
import java.util.logging.Level;
import javafx.application.Platform;
import javafx.embed.swing.JFXPanel;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javax.swing.JPanel;
import uk.ac.uea.cmp.srnaworkbench.GUIInterface;
import uk.ac.uea.cmp.srnaworkbench.MDIDesktopPane;
import uk.ac.uea.cmp.srnaworkbench.tools.ToolManager;
import uk.ac.uea.cmp.srnaworkbench.utils.AppUtils;
import static uk.ac.uea.cmp.srnaworkbench.utils.LOGGERS.WorkbenchLogger.LOGGER;

/**
 *
 * @author w0445959
 */
public class PlotSelectionViewer extends javax.swing.JInternalFrame implements GUIInterface
{
    
    private static Scene scene;
    
    private static Parent root;
    
    private static PlotSelectionSceneController controller;
    private boolean showingParams;

    /**
     * Creates new form PlotSelectionViewer
     */
    public PlotSelectionViewer()
    {
        initComponents();
        
         final JFXPanel fxPanel = new JFXPanel();
        this.mainScrollPane.setViewportView(fxPanel);
        Platform.runLater(() ->
        {
            initFX(fxPanel);
        });
    }
    
    private void initFX(JFXPanel fxPanel) {
        // This method is invoked on the JavaFX thread
        createScene();
        fxPanel.setScene(scene);
    }

    private void createScene() 
    {
        try
        {
            //Parent root = FXMLLoader.load(FileHierarchyViewer.class.getResource("/fxml/FileHierarchyView.fxml"));
            FXMLLoader loader = new FXMLLoader(PlotSelectionViewer.class.getResource("/fxml/PlotSelectionScene.fxml"));
            root = loader.load();
            scene = new Scene(root);
            scene.getStylesheets().add("/styles/Styles.css");

            controller = (PlotSelectionSceneController)loader.getController();
            controller.setStageAndSetupListeners(scene);
        }
        catch (IOException ex)
        {
            LOGGER.log(Level.SEVERE, null, ex);
        }

    }
    
     public static PlotSelectionViewer getOrCreateViewer()
    {
        if(ToolManager.getInstance().getTool("SequenceDistributionView") == null)
        {
            final PlotSelectionViewer viewer = new PlotSelectionViewer();
            MDIDesktopPane pane = AppUtils.INSTANCE.getMDIDesktopPane();

            if (pane != null)
            {
                pane.add(viewer);
            }

            ToolManager.getInstance().addTool(viewer);

            
            try
            {
                viewer.setMaximum(true);
            }
            catch (PropertyVetoException ex)
            {
                LOGGER.log(Level.SEVERE, ex.getMessage());
            }
            return viewer;
            
        }
        else
        {
            return ((PlotSelectionViewer)ToolManager.getInstance().getTool("SequenceDistributionView"));
        }
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        mainScrollPane = new javax.swing.JScrollPane();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1033, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 716, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane mainScrollPane;
    // End of variables declaration//GEN-END:variables

    @Override
    public void runProcedure()
    {
    }

    @Override
    public JPanel getParamsPanel()
    {
        return null;
    }

    @Override
    public void setShowingParams(boolean newState)
    {
        showingParams = newState;
    }

    @Override
    public boolean getShowingParams()
    {
        return showingParams;
    }

    @Override
    public void shutdown()
    {
    }
}
