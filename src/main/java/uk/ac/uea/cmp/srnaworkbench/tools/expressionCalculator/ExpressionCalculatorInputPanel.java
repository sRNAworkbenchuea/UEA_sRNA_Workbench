/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package uk.ac.uea.cmp.srnaworkbench.tools.expressionCalculator;

import uk.ac.uea.cmp.srnaworkbench.utils.FileDialogUtils;
import uk.ac.uea.cmp.srnaworkbench.utils.FileDialogUtils.FileExtFilter;

/**
 *
 * @author w0445959
 */
public class ExpressionCalculatorInputPanel extends javax.swing.JPanel
{
  /**
   * Creates new form ExpressionCalculatorInputPanel
   */
  public ExpressionCalculatorInputPanel()
  {
    initComponents();
    
    this.sampleInputFSP.setFilters( 
      FileDialogUtils.FileExtFilter.toFilterArray( FileExtFilter.FASTA ));
    longReadInputFSP.setFilters( 
      FileDialogUtils.FileExtFilter.toFilterArray( FileExtFilter.FASTA ));
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dataTypeRadioGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        sampleInputFSP = new uk.ac.uea.cmp.srnaworkbench.swing.FileSelectorPanel();
        longReadInputFSP = new uk.ac.uea.cmp.srnaworkbench.swing.FileSelectorPanel();
        jPanel2 = new javax.swing.JPanel();
        sRNADataRadio = new javax.swing.JRadioButton();
        mRNADataRadio = new javax.swing.JRadioButton();

        setBackground(new java.awt.Color(120, 120, 120));
        setBorder(javax.swing.BorderFactory.createTitledBorder(null, org.openide.util.NbBundle.getMessage(ExpressionCalculatorInputPanel.class, "ExpressionCalculatorInputPanel.border.title_1"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans Unicode", 0, 13), new java.awt.Color(255, 255, 255))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(120, 120, 120));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, org.openide.util.NbBundle.getMessage(ExpressionCalculatorInputPanel.class, "ExpressionCalculatorInputPanel.jPanel1.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans Unicode", 0, 13), new java.awt.Color(255, 255, 255))); // NOI18N

        sampleInputFSP.setToolTipText(org.openide.util.NbBundle.getMessage(ExpressionCalculatorInputPanel.class, "ExpressionCalculatorInputPanel.sampleInputFSP.toolTipText")); // NOI18N
        sampleInputFSP.setEnabled(false);
        sampleInputFSP.setLabel(org.openide.util.NbBundle.getMessage(ExpressionCalculatorInputPanel.class, "ExpressionCalculatorInputPanel.sampleInputFSP.label")); // NOI18N

        longReadInputFSP.setEnabled(false);
        longReadInputFSP.setLabel(org.openide.util.NbBundle.getMessage(ExpressionCalculatorInputPanel.class, "ExpressionCalculatorInputPanel.longReadInputFSP.label")); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(sampleInputFSP, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
            .add(longReadInputFSP, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(sampleInputFSP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 133, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(longReadInputFSP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(120, 120, 120));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, org.openide.util.NbBundle.getMessage(ExpressionCalculatorInputPanel.class, "ExpressionCalculatorInputPanel.jPanel2.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(255, 255, 255))); // NOI18N

        dataTypeRadioGroup.add(sRNADataRadio);
        sRNADataRadio.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11)); // NOI18N
        sRNADataRadio.setForeground(new java.awt.Color(255, 255, 255));
        sRNADataRadio.setText(org.openide.util.NbBundle.getMessage(ExpressionCalculatorInputPanel.class, "ExpressionCalculatorInputPanel.sRNADataRadio.text")); // NOI18N
        sRNADataRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sRNADataRadioActionPerformed(evt);
            }
        });

        dataTypeRadioGroup.add(mRNADataRadio);
        mRNADataRadio.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11)); // NOI18N
        mRNADataRadio.setForeground(new java.awt.Color(255, 255, 255));
        mRNADataRadio.setText(org.openide.util.NbBundle.getMessage(ExpressionCalculatorInputPanel.class, "ExpressionCalculatorInputPanel.mRNADataRadio.text")); // NOI18N
        mRNADataRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mRNADataRadioActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(sRNADataRadio)
                    .add(mRNADataRadio))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(sRNADataRadio)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mRNADataRadio)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

  private void sRNADataRadioActionPerformed( java.awt.event.ActionEvent evt )//GEN-FIRST:event_sRNADataRadioActionPerformed
  {//GEN-HEADEREND:event_sRNADataRadioActionPerformed
    checkConfiguration();
  }//GEN-LAST:event_sRNADataRadioActionPerformed

  private void mRNADataRadioActionPerformed( java.awt.event.ActionEvent evt )//GEN-FIRST:event_mRNADataRadioActionPerformed
  {//GEN-HEADEREND:event_mRNADataRadioActionPerformed
    checkConfiguration();
  }//GEN-LAST:event_mRNADataRadioActionPerformed

  private void checkConfiguration()
  {

//    java.awt.EventQueue.invokeLater( new Runnable()
//    {
//      @Override
//      public void run()
//      {
        if ( sRNADataRadio.isSelected() )
        {
          sampleInputFSP.setEnabled( true );
          longReadInputFSP.setEnabled( true );

          longReadInputFSP.setLabel( "Genome Input (mandatory): " );
          
          sampleInputFSP.setLabelWidth( 191 );
          longReadInputFSP.setLabelWidth( 191 );
        }
        if ( mRNADataRadio.isSelected() )
        {
          sampleInputFSP.setEnabled( true );
          longReadInputFSP.setEnabled( true );

          longReadInputFSP.setLabel( "Transcriptome Input (mandatory): " );
          sampleInputFSP.setLabelWidth( 191 );
          longReadInputFSP.setLabelWidth( 191 );
          

        }
//      }
//    } );


  }

  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup dataTypeRadioGroup;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private uk.ac.uea.cmp.srnaworkbench.swing.FileSelectorPanel longReadInputFSP;
    private javax.swing.JRadioButton mRNADataRadio;
    private javax.swing.JRadioButton sRNADataRadio;
    private uk.ac.uea.cmp.srnaworkbench.swing.FileSelectorPanel sampleInputFSP;
    // End of variables declaration//GEN-END:variables

  
}
